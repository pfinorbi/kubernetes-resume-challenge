name: Build, publish and deploy Docker image to AKS

on:
  push:
    branches:
      - 'master'

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    outputs:
      image_version: ${{ steps.set_var.outputs.image_version }}
    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: pufi01/ecom-web
          tags: type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: app
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Set output variable
        id: set_var
        run: |
          echo "image_version=$(echo $DOCKER_METADATA_OUTPUT_JSON | jq -r '.labels["org.opencontainers.image.version"]')" >> $GITHUB_OUTPUT

  deploy_to_kubernetes:
    name: Deploy image to AKS
    needs: push_to_registry
    runs-on: ubuntu-latest
        
    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Get output variable
        run: |
          echo "Image version: ${{ needs.push_to_registry.outputs.image_version }}"

      - name: Setup kubectl
        uses: azure/setup-kubectl@v4

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        uses: azure/aks-set-context@v4
        with:
          resource-group: ${{ vars.AKS_RGNAME }}
          cluster-name: ${{ vars.AKS_CLUSTERNAME }}

      - name: Create manifests from helm chart
        id: bake
        uses: azure/k8s-bake@v3
        with:
          renderEngine: 'helm'
          helmChart: 'helm/ecom/'
          overrideFiles: 'helm/ecom/values.yaml'
          overrides: |
            website.replicas:2
          namespace: ecom

      - name: Create namespace if it does not exist
        run: |
          NAMESPACE="ecom"
          kubectl get namespace | grep -q "^$NAMESPACE " || kubectl create namespace $NAMESPACE
        
      - name: Deploy manifests to AKS
        uses: Azure/k8s-deploy@v5
        with:
          action: deploy
          manifests: ${{ steps.bake.outputs.manifestsBundle }}
          images: |
            pufi01/ecom-web:${{ needs.push_to_registry.outputs.image_version }}

      